package com.huangyezhaobiao.activity;

import java.util.ArrayList;
import java.util.List;

import android.content.SharedPreferences;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;

import com.huangye.commonlib.activity.BaseActivity;
import com.huangyezhaobiao.R;
import com.huangyezhaobiao.inter.Constans;
import com.huangyezhaobiao.utils.ActivityUtils;
import com.huangyezhaobiao.utils.CommonUtils;
import com.huangyezhaobiao.utils.UserUtils;
import com.huangyezhaobiao.utils.VersionUtils;
import com.huangyezhaobiao.voice.VoiceManager;

/**
 * 引导界面
 * 
 * @author shenzhixin
 * 
 */
public class GuideActivity extends BaseActivity {
	private List<View> views = new ArrayList<View>();
	private ViewPager viewPager;
	private ImageView hint_indicator;
	private int width;
	private ImageView[] indicators = new ImageView[4];
	private int[] ids = { R.id.indicator1, R.id.indicator2, R.id.indicator3,
			R.id.indicator4 };
	private float distance;
	private GuideAdapter adapter;
	private SharedPreferences sp;
	private int screenHeigh;
	private int screenWidth;
	private View view1;
	private View view2;
	private View view3;
	private View view4;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		getScreenSize();
		sp = getSharedPreferences(Constans.APP_SP, 0);
		String currentVersionName = "1.0.0";
		try {
			currentVersionName = VersionUtils.getVersionName(this);
		} catch (NameNotFoundException e) {
			e.printStackTrace();
		}
		String saveVersionName = sp.getString(Constans.VERSION_NAME, "1.0.0");
		String mCurrentVersionName = currentVersionName.replace(".", "");

		Log.e("ashenVersion", "cvN:" + currentVersionName);
		Log.e("ashenVersion", "isFirst:" + sp.getBoolean("isFirst", true));
		if (!sp.getBoolean("isFirst", true)
				&&CommonUtils.compareTwoNumbers(saveVersionName,
						mCurrentVersionName)) {// 如果之前进入过引导页了,并且没有新版本(当前版本号<=存的版本号)
			if (TextUtils.isEmpty(UserUtils.getUserId(GuideActivity.this))) {// 如果没登录过
				ActivityUtils.goToActivity(GuideActivity.this,
						LoginActivity.class);
			} else {
				ActivityUtils.goToActivity(GuideActivity.this,
						MainActivity.class);
			}
			finish();
			sp.edit().putString(Constans.VERSION_NAME, currentVersionName)
					.commit();
			return;
		}
		sp.edit().putString(Constans.VERSION_NAME, currentVersionName)
		.commit();
		initView();
		initListener();
		adapter = new GuideAdapter();
		viewPager.setAdapter(adapter);
	}

	@Override
	public void initView() {
		setContentView(R.layout.activity_guide);
		viewPager = getView(R.id.viewPager);
		hint_indicator = getView(R.id.hint_indicator);
		hint_indicator.post(new Runnable() {
			@Override
			public void run() {
				LayoutParams params = (LayoutParams) hint_indicator
						.getLayoutParams();
				width = params.width;
				Log.e("asas", "width:" + width);
				distance = TypedValue.applyDimension(
						TypedValue.COMPLEX_UNIT_DIP, 25.0f, getResources()
								.getDisplayMetrics());
			}
		});

		for (int i = 0; i < indicators.length; i++) {
			indicators[i] = getView(ids[i]);
		}
		if (screenHeigh <= 480) {
			view1 = LayoutInflater.from(this).inflate(R.layout.guide1_small,
					null);
			view2 = LayoutInflater.from(this).inflate(R.layout.guide2_small,
					null);
			view3 = LayoutInflater.from(this).inflate(R.layout.guide3_small,
					null);
			view4 = LayoutInflater.from(this).inflate(R.layout.guide4_small,
					null);
		} else {
			view1 = LayoutInflater.from(this).inflate(R.layout.guide1, null);
			view2 = LayoutInflater.from(this).inflate(R.layout.guide2, null);
			view3 = LayoutInflater.from(this).inflate(R.layout.guide3, null);
			view4 = LayoutInflater.from(this).inflate(R.layout.guide4, null);
		}
		views.add(view1);
		views.add(view2);
		views.add(view3);
		views.add(view4);
		RelativeLayout rl = (RelativeLayout) view4.findViewById(R.id.rl_click);
		rl.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				if (TextUtils.isEmpty(UserUtils.getUserId(GuideActivity.this))) {// 如果没登录过
					ActivityUtils.goToActivity(GuideActivity.this,
							LoginActivity.class);
				} else {
					ActivityUtils.goToActivity(GuideActivity.this,
							MainActivity.class);
				}
				sp.edit().putBoolean("isFirst", false).commit();
				finish();
			}
		});
	}

	@Override
	public void initListener() {
		viewPager.setOnPageChangeListener(new OnPageChangeListener() {
			@Override
			public void onPageSelected(int position) {

			}

			@Override
			public void onPageScrolled(int position, float positionOffset,
					int positionOffsetPixels) {
				scrollToAnim(position, positionOffset);
			}

			@Override
			public void onPageScrollStateChanged(int state) {

			}
		});
	}

	/**
	 * 移动动画
	 * 
	 * @param position
	 * @param positionOffset
	 */
	protected void scrollToAnim(int position, float positionOffset) {
		Log.e("ashenPager", "position:" + position + "offSet:" + positionOffset
				+ "distance:" + distance);
		RelativeLayout.LayoutParams params = (LayoutParams) hint_indicator
				.getLayoutParams();
		params.leftMargin = (int) ((distance * positionOffset) + position
				* distance);
		Log.e("ashenPager", "leftMargin:" + params.leftMargin);
		hint_indicator.setLayoutParams(params);
	}

	private class GuideAdapter extends PagerAdapter {

		@Override
		public int getCount() {
			return views.size();
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			((ViewPager) container).removeView(views.get(position));
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			((ViewPager) container).addView(views.get(position), 0);
			return views.get(position);
		}

	}

	public void getScreenSize() {
		DisplayMetrics dm = new DisplayMetrics();
		// 获取屏幕信息
		getWindowManager().getDefaultDisplay().getMetrics(dm);
		screenWidth = dm.widthPixels;
		screenHeigh = dm.heightPixels;
		Log.e("screenSize", "width:" + screenWidth + ",height:" + screenHeigh);
	}
}
